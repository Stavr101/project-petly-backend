{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Petly project conection API",
    "description": " API that help find and sell pets",
    "contact": {
      "name": "Swagger API Team",
      "email": "apiteam@swagger.io",
      "url": "http://swagger.io"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://project-petly-backend.onrender.com/api/v1"
    },
    { "url": "http://localhost:4000/api/v1" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Pet",
      "description": "User's pet endpoints"
    },
    {
      "name": "Notice",
      "description": "Notice endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Services",
      "description": "Services endpoints"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Logout success",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/notices": {
      "post": {
        "tags": ["Notice"],
        "summary": "Add new notice",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticeRequest"
              },
              "encoding": {
                "petAvatar": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/notices/own": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get owner's notices",
        "parameters": [
          { "in": "query", "name": "search" },
          { "in": "query", "name": "page" },
          { "in": "query", "name": "limit" }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/notices/own/{noticeId}": {
      "delete": {
        "tags": ["Notice"],
        "summary": "delete owner's notice",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Contact with id={noticeId} deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get favorite notices",
        "parameters": [
          { "in": "query", "name": "search" },
          { "in": "query", "name": "page" },
          { "in": "query", "name": "limit" }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/notices/favorite/{noticeId}": {
      "patch": {
        "tags": ["Notice"],
        "summary": "Add notice to favorite",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "The notice has been added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeToFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "409": {
            "description": "Notice with 'notice id' is already added",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notice"],
        "summary": "delete notice from the favorite ",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Delete succes",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },

    "/notices/category/{categotyName}": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get notices by category",
        "parameters": [
          { "in": "path", "name": "categotyName" },
          { "in": "query", "name": "search" },
          { "in": "query", "name": "page" },
          { "in": "query", "name": "limit" }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByCategory"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/notices/notice/{noticeId}": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get notice by id",
        "parameters": [{ "in": "path", "name": "noticeId" }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoticeByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Add user's pet",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AddPetRequest"
              },
              "encoding": {
                "avatarUrl": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Change user params",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUserParamsRequest"
              },
              "encoding": {
                "avatarUrl": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/user/avatar": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAvatarRequest"
              },
              "encoding": {
                "userAvatar": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar is updated successfully",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete user's pet",
        "parameters": [{ "in": "path", "name": "id" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/user/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "Change user's data",
        "parameters": [{ "in": "path", "name": "id" }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/user/pets": {
      "get": {
        "tags": ["User"],
        "summary": "Get user's pets",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },

    "/services": {
      "get": {
        "tags": ["Services"],
        "summary": "Get your friends",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get news",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password", "address", "phone"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Arestovich"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234567"
          },

          "address": {
            "type": "string",
            "description": "User's loccation",
            "example": "Kyiv, Ukraine"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380931111111"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Arestovich"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "phone": {
                "type": "string",
                "description": "User's phone",
                "example": "1234567"
              },
              "avatarUrl": {
                "type": "object",
                "properties": {
                  "secure_url": {
                    "type": "string",
                    "description": "User's avatar url",
                    "example": "//www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af"
                  },
                  "public_id": {
                    "type": "string",
                    "description": "User avatar's id",
                    "example": null
                  }
                }
              },
              "address": {
                "type": "string",
                "description": "User's location",
                "example": "Kyiv, Ukraine"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "01.01.2001"
              },
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "string"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234567"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Arestovich"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "address": {
                "type": "string",
                "description": "User's location",
                "example": "Kyiv, Ukraine"
              },
              "phone": {
                "type": "string",
                "description": "User's phone",
                "example": "1234567"
              },
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "string"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "01.01.2001"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "JWT token"
          }
        }
      },
      "AddNoticeRequest": {
        "type": "object",
        "required": [
          "title",
          "name",
          "sex",
          "birthdate",
          "breed",
          "location",
          "petAvatar",
          "comments",
          "categoryName"
        ],
        "properties": {
          "title": {
            "type": "String",
            "description": "The main thing is about the animal pet",
            "example": "Cute dog looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "example": "male"
          },
          "birthdate": {
            "type": "date",
            "description": "Pet's birthdate",
            "example": "2020.09.20"
          },
          "breed": {
            "type": "string",
            "description": "Breed's sex",
            "example": "Pomeranian"
          },
          "petAvatar": {
            "type": "string",
            "description": "Pet owner's location",
            "format": "binary"
          },
          "location": {
            "type": "string",
            "description": "Pet owner's location",
            "example": "Kyiv, Ukraine"
          },
          "comments": {
            "type": "string",
            "description": "Comments about pet",
            "example": "Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet"
          },
          "categoryName": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "price": {
            "type": "integer",
            "description": "pet's cost",
            "example": 100
          }
        },
        "allOf": [
          {
            "if": {
              "properties": { "categoryName": { "const": "sell" } },
              "required": ["price"]
            }
          }
        ]
      },
      "AddNoticeResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "String",
            "description": "The main thing is about the animal pet",
            "example": "Cute dog looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "example": "male"
          },
          "birthdate": {
            "type": "date",
            "description": "Pet's birthdate",
            "example": "2020.09.2020"
          },
          "breed": {
            "type": "string",
            "description": "Breed's sex",
            "example": "Pomeranian"
          },

          "location": {
            "type": "string",
            "description": "Pet owner's location",
            "example": "Kyiv, Ukraine"
          },
          "petAvatarURL": {
            "type": "object",
            "properties": {
              "secure_url": {
                "type": "string",
                "description": "User's avatar url",
                "example": "//www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af"
              },
              "public_id": {
                "type": "string",
                "description": "User avatar's id",
                "example": null
              }
            }
          },
          "comments": {
            "type": "string",
            "description": "Comments about pet",
            "example": "Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet"
          },
          "categoryName": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "price": {
            "type": "integer",
            "description": "pet's cost",
            "example": 100
          },
          "owner": {
            "type": "string",
            "description": "Notice's owner",
            "example": "String"
          },
          "_id": {
            "type": "string",
            "description": "Notice's id",
            "example": "String"
          },
          "createdAt": {
            "type": "string",
            "description": "Notice's create date",
            "example": "2023-02-12T14:49:43.482Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Notice's update date",
            "example": "2023-02-12T14:49:43.482Z"
          }
        }
      },
      "GetNoticeByCategory": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "String",
            "description": "notice's id",
            "example": "String"
          },
          "title": {
            "type": "String",
            "description": "The main thing is about the animal pet",
            "example": "Cute dog looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "birthdate": {
            "type": "date",
            "description": "Pet's birthdate",
            "example": "2020.09.20"
          },
          "breed": {
            "type": "string",
            "description": "Breed's sex",
            "example": "Pomeranian"
          },
          "location": {
            "type": "string",
            "description": "Pet owner's location",
            "example": "Kyiv, Ukraine"
          },
          "petAvatarURL": {
            "type": "object",
            "properties": {
              "secure_url": {
                "type": "string",
                "description": "User's avatar url",
                "example": "//www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af"
              },
              "public_id": {
                "type": "string",
                "description": "User avatar's id",
                "example": null
              }
            }
          },
          "categoryName": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "price": {
            "type": "integer",
            "description": "pet's cost",
            "example": 100
          },
          "owner": {
            "type": "string",
            "description": "notice's owner",
            "example": "String"
          }
        }
      },
      "GetNoticeByIdResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "String",
            "description": "notice's id",
            "example": "String"
          },
          "title": {
            "type": "String",
            "description": "The main thing is about the animal pet",
            "example": "Cute dog looking for a home"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "sex": {
            "type": "string",
            "description": "Pet's sex",
            "example": "male"
          },
          "birthdate": {
            "type": "date",
            "description": "Pet's birthdate",
            "example": "2020.09.20"
          },
          "breed": {
            "type": "string",
            "description": "Breed's sex",
            "example": "Pomeranian"
          },
          "location": {
            "type": "string",
            "description": "Pet owner's location",
            "example": "Kyiv, Ukraine"
          },
          "petAvatarURL": {
            "type": "object",
            "properties": {
              "secure_url": {
                "type": "string",
                "description": "User's avatar url",
                "example": "https://res.cloudinary.com/dggq7qmr5/image/upload/v1676213383/petly_project/notices_pets_img/63e8fc8605bb4ffa8102e2c5.jpg"
              },
              "public_id": {
                "type": "string",
                "description": "User avatar's id",
                "example": "String"
              }
            }
          },
          "comments": {
            "type": "string",
            "description": "comment about pet",
            "example": "string"
          },
          "categoryName": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "price": {
            "type": "integer",
            "description": "pet's cost",
            "example": 100
          },
          "owner": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Owner's id",
                "example": "string"
              },
              "name": {
                "type": "string",
                "description": "Owner's name",
                "example": "Arestovich"
              },
              "email": {
                "type": "string",
                "description": "Owner's email",
                "format": "email"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Notice's create date",
            "example": "2023-02-12T14:49:43.482Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Notice's update date",
            "example": "2023-02-12T14:49:43.482Z"
          }
        }
      },

      "GetUserResponse": {
        "type": "object",
        "properties": {
          "avatarUrl": {
            "type": "object",
            "properties": {
              "secure_url": {
                "type": "string",
                "description": "User avatar's URL",
                "example": "String"
              },
              "public_id": {
                "type": "string",
                "description": "User avatar's id",
                "example": "String"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Arestovich"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.01.2001"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380931111111"
          },
          "address": {
            "type": "string",
            "description": "User's loccation",
            "example": "Kyiv, Ukraine"
          },
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "string"
          },
          "favorite": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChangeUserParamsRequest": {
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Arestovich"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's name",
                "example": "Arestovich"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "01.01.2001"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "+380931111111"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "User's loccation",
                "example": "Kyiv, Ukraine"
              }
            }
          }
        ]
      },

      "AddPetRequest": {
        "type": "object",
        "required": ["name", "date", "breed", "avatarUrl", "comment"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "date": {
            "type": "date",
            "description": "Pet's birthdate",
            "example": "2020.09.20"
          },
          "breed": {
            "type": "string",
            "description": "Breed's sex",
            "example": "Pomeranian"
          },
          "avatarUrl": {
            "type": "string",
            "description": "Pet owner's location",
            "format": "binary"
          },
          "comment": {
            "type": "string",
            "description": "Comments about pet",
            "example": "Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet"
          }
        }
      },
      "AddPetResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rich"
          },
          "date": {
            "type": "date",
            "description": "Pet's birthdate",
            "example": "2020.09.20"
          },
          "breed": {
            "type": "string",
            "description": "Pet's breed",
            "example": "Pomeranian"
          },
          "avatarUrl": {
            "type": "object",
            "properties": {
              "secure_url": {
                "type": "string",
                "description": "pet avatar's url",
                "example": "https://res.cloudinary.com/dggq7qmr5/image/upload/v1676222925/petly_project/user_pets_img/63e921cc05bb4ffa8102ec34.jpg"
              },
              "public_id": {
                "type": "string",
                "description": "pet avatar's id",
                "example": "string"
              }
            }
          },
          "comment": {
            "type": "string",
            "description": "Comments about pet",
            "example": "Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit amet"
          }
        }
      },
      "UpdateUserAvatarRequest": {
        "type": "object",
        "required": ["userAvatar"],
        "properties": {
          "userAvatar": {
            "type": "string",
            "description": "User avatar",
            "format": "binary"
          }
        }
      },
      "AddNoticeToFavoriteResponse": {
        "type": "object",
        "properties": {
          "favorite": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "String",
            "description": "Response successful message",
            "example": "The notice has been added to favorites"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
